include mixins/flagList
include mixins/bandwidth-stats
include mixins/weight-stats
include mixins/uptime-stats

extends layout

block content
    .pure-g
        .pure-u-1
            if model
                .text-content
                .fast-look.pure-g-r(class=model.running)
                    .pure-u-1-3
                        .text-content
                            h4 nickname
                            p #{model.nickname}
                    .pure-u-1-3
                        .text-content
                            if model.running
                                h4 uptime
                                p !{format.uptimeFull(model.last_restarted)}
                            else
                                h4 downtime
                                p !{format.uptimeFull(model.last_seen)}
                    .pure-u-1-3
                        .text-content
                            h4 running
                            p(class=model.running) #{model.running}
                .page-properties
                    .text-content
                        .property
                            h5 Fingerprint
                            p.align-center.no-width-limit #{model.fingerprint}

                    +flagList(model.flags, model.inLatestConsensus)

                    .pure-g-r
                        .pure-u-1-2
                            .text-content
                                .property
                                    h5 OR address
                                    ul.property-content.item-list
                                        if model.or_addresses
                                            each or_address in model.or_addresses
                                                li #{or_address}
                                        else
                                            li none
                                .property
                                    h5 Exit Policy Summary
                                        if model.exit_policy_summary.accept
                                            strong.true  accept
                                        else
                                            strong.false  reject

                                    if model.exit_policy_summary.accept
                                        ul.property-content.item-list
                                            each accept in model.exit_policy_summary.accept
                                                li #{accept}
                                    if model.exit_policy_summary.reject
                                        ul.property-content.item-list
                                            each reject in model.exit_policy_summary.reject
                                                li #{reject}
                                .property
                                    h5 Exit Policy
                                    .property-content
                                        ul.item-list
                                            if model.exit_policy
                                                each exit_policy_item in model.exit_policy
                                                    li #{exit_policy_item}
                                            else
                                                li none
                                .property.show-container
                                    h5 Advertised Bandwidth
                                    label.pure-button.x-small.show-toggle(for='extended-bandwidth')
                                        i.fa.fa-angle-down  more
                                    p.property-content #{format.bandwidth(model.advertised_bandwidth)}
                                    input(type='checkbox', id='extended-bandwidth')
                                    .show-content
                                        h5 Bandwidth Rate
                                        p.property-content #{format.bandwidth(model.bandwidth_rate)}
                                        h5 Bandwidth Burst
                                        p.property-content #{format.bandwidth(model.bandwidth_burst)}
                                        h5 Observed Bandwidth
                                        p.property-content #{format.bandwidth(model.observed_bandwidth)}
                                .property
                                    h5 Last Restarted
                                    p.property-content #{model.last_restarted}
                        .pure-u-1-2
                            .text-content
                                .property
                                    h5 Contact
                                    p.property-content #{model.contact}
                                .property
                                    h5 Platform
                                    p.property-content #{model.platform}
                                .property
                                    h5 Country
                                    // flaggify country, fullCountry
                                    p.property-content !{format.flaggify(model.country)} #{countries[model.country]}
                                .property
                                    h5 Dir Address
                                    p.property-content #{model.dir_address}
                                .property
                                    h5 AS Number
                                    p.property-content #{model.as_number}
                                .property
                                    h5 AS Name
                                    p.property-content #{model.as_name}
                                .property
                                    h5 Family Members
                                    p.property-content
                                        ul.item-list
                                            if model.family
                                                each family_member in model.family
                                                    li
                                                        a(href='/relay/' + format.familyToFingerprint(family_member))
                                                            i.button.fa.fa-external-link-square
                                                            = format.familyToFingerprint(family_member)
                                            else
                                                li none
            else
                .text-content
                    p.align-center.no-width-limit No detail found <i class="fa fa-meh-o"></i>

    .tabs
        each period, index in model.periods
            .tab
                input(type='radio', id='tab-' + index, name='tab-grp', checked)
                label(for='tab-' + index) #{period.title}
                .tab-content
                    +bandwidthStats(model.bandwidthGraphUrl, period.key, period.avg)
                    +weightStats(model.historyGraphUrl, period.key, period.avg)
                    +uptimeStats(0, period.key, period.avg)