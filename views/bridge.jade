include mixins/flagList
include mixins/bandwidth-stats
include mixins/uptime-stats
include mixins/client-stats
include mixins/tip

extends layout

block content
    .pure-g
        .pure-u-1
            if model
                .text-content
                .fast-look.pure-g-r(class=model.running)
                    .pure-u-1-3
                        .text-content
                            h4.has-tip nickname
                                +tip('This is the nickname that the Tor bridge operator chose.', 'Nickname')
                            p #{model.nickname}
                    .pure-u-1-3
                        .text-content
                            if model.running
                                h4.has-tip uptime
                                    +tip('The time since this bridge is online.', 'Uptime')
                                p !{format.uptimeFull(model.last_restarted)}
                            else
                                h4.has-tip downtime
                                    +tip('The time since this bridge was last seen online.', 'Downtime')
                                p !{format.uptimeFull(model.last_seen)}
                    .pure-u-1-3
                        .text-content
                            h4.has-tip running
                                +tip('Whether this bridge is listed in the current Tor directory or not.', 'Running')
                            p(class=model.running) #{model.running}
                .page-properties
                    .text-content
                        .property
                            h5.has-tip Hashed fingerprint
                                +tip('20-byte unique identifier of the bridge.', 'Hashed fingerprint')
                            p.align-center.no-width-limit #{model.hashed_fingerprint}

                    +flagList(model.flags, model.inLatestConsensus)

                    .pure-g-r
                        //- first column
                        .pure-u-1-2
                            .text-content
                                .property
                                    h5.has-tip OR address
                                        +tip('Addresses and ports where the bridge listens for incoming connections from clients and other bridges.', 'Onion-routing addresses')
                                    ul.property-content.item-list
                                        if model.or_addresses
                                            each or_address in model.or_addresses
                                                li #{or_address}
                                        else
                                            li none
                                .property
                                    h5.has-tip Advertised Bandwidth
                                        +tip('Bandwidth that the bridge is willing and able to provide in bytes per second.', 'Advertised bandwidth')
                                    p.property-content #{format.bandwidth(model.advertised_bandwidth)}
                        .pure-u-1-2
                            .text-content
                                .property
                                    h5.has-tip Last Restarted
                                        +tip('Date and time when the bridge was last (re-)started.', 'Last restarted')
                                    p.property-content #{model.last_restarted}
                                .property
                                    h5.has-tip Platform
                                        +tip('What OS and Tor version the bridge is using', 'Platform')
                                    p.property-content #{model.platform}
                                .property
                                    h5.has-tip Pool Assignment
                                        +tip('Information of the pool that BridgeDB assigned this bridge to.', 'Pool assignment')
                                    p.property-content #{model.pool_assignment}
            else
                .text-content
                    p.align-center.no-width-limit No detail found <i class="fa fa-meh-o"></i>
    .tabs
        each period, index in model.periods
            .tab
                input(type='radio', id='tab-' + index, name='tab-grp', checked)
                label(for='tab-' + index) #{period.title}
                .tab-content
                    +bandwidthStats(model.bandwidthGraphUrl, period.key, period.avg)
                    +uptimeStats(model.uptimeGraphUrl, period.key, period.avg)
                    +clientStats(model.clientGraphUrl, period.key, period.avg)