.advanced-search
    .center-wrapper
        .pure-g-r.search-filters
            .pure-u-1-12
                strong Filters
            .pure-u-11-12
                .pure-g
                    .pure-u-1-3
                        label(for='s-type') Type
                        select#s-type(name='type')
                            option(value='')
                            each type in search.type
                                option(value=type, selected=advSearch.filter.type == type)
                                    = type
                    .pure-u-1-3
                        label(for='s-running') Running
                        select#s-running(name='running')
                            option(value='')
                            each running in search.running
                                option(value='' + running,selected=advSearch.filter.running === running)
                                    = running
                    .pure-u-1-3
                        label(for='s-as') AS Number
                        input#s-as(type=text, name='as', placeholder='AS', value=advSearch.filter.as)
                    .pure-u-1-3
                        label(for='s-country') Country
                        select#s-country(name='country')
                            option(value='')
                            each country in countriesArray
                                option(value=country.key, selected=advSearch.filter.country == country.key)
                                    = country.value
                    .pure-u-1-3
                        label(for='s-flag') Flag #{advSearch.filter.flag}
                        select#s-flag(name='flag')
                            option(value='')
                            each flag in flagsArray
                                option(value=flag.key, selected=advSearch.filter.flag == flag.key)
                                    = flag.key
                    .pure-u-1-3
                        label(for='s-family') Family
                        input#s-family(type=text, name='family', placeholder='A59E1E7C7EAEE083D756EE1FF6EC31CA3D8651D7', value=advSearch.filter.family)
                    .pure-u-1
                        input#exit(type='checkbox', name='exit', checked=advSearch.filter.exit ? 'checked' : undefined)
                        label(for='exit') only relays and bridges suitable for exit position:
                        select(name='exitSpeed')
                            option(value='') all exit relays
                            option(value='FAST_EXIT', selected=advSearch.filter.exitSpeed == 'FAST_EXIT') fast exit relays
                            option(value='ALMOST_FAST_EXIT', selected=advSearch.filter.exitSpeed == 'ALMOST_FAST_EXIT') almost fast exit relays
                            option(value='FAST_EXIT_ANY_NETWORK', selected=advSearch.filter.exitSpeed == 'FAST_EXIT_ANY_NETWORK') fast exit relays any network
        hr
        .pure-g-r.search-filters
            .pure-u-1-12
                strong Group
            .pure-u-11-12
                input#groupCountry(name='groupCountry', type='checkbox', checked=advSearch.group.country ? 'checked' : undefined)
                label(for='groupCountry') by country
                input#groupAS(name='groupAS', type='checkbox', checked=advSearch.group.as ? 'checked' : undefined)
                label(for='groupAS') by AS
                input#groupFamily(name='groupFamily', type='checkbox', checked=advSearch.group.family ? 'checked' : undefined)
                label(for='groupFamily') by family
                input#groupContact(name='groupContact', type='checkbox', checked=advSearch.group.contact ? 'checked' : undefined)
                label(for='groupContact') by contact
        hr
        .pure-g-r.search-filters
            .pure-u-1-12
                strong Limit
            .pure-u-11-12
                input#limit(name='limit', type='text', pattern='[0-9]+', value=advSearch.actions.limit >= 0 ? advSearch.actions.limit : '10')
                label(for='limit')  (0 for all results)